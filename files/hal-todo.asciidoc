= ToDo Service - HAL Client
:author: Mike Amundsen
:email: mca@mamund.com
:toc:

== Overview
This service provides a simple ToDo list management interface for creating ToDo records, editing them, and remvoing them. There is also an option to filter tasks by their completion status (+completed=true+ or +completed=false+).

== RFC2119 Words
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", 
"SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be 
interpreted as described in link:http://tools.ietf.org/html/rfc2119[RFC2119].

== Media Type Support
All server response bodies SHOULD be returned using the xref:hal-json[HAL+JSON Media Type]. All client write request bodies (e.g. POST and PUT) MUST be sent using the  
xref:plain-json[JSON Media Type]. All client read requests (e.g. GET) that rely upons parameters MUST be sent using xref:query-strings[URL Query] strings.

== Supported Operations and Link Relation Values
Below is the list of link relation values and the operations they perform. Note that some Link Relation Values are link:https://tools.ietf.org/html/rfc5988#section-4.2[RFC5988]-compliant URIs. At runtime, these values will contain a complete URI that SHOULD point to a section within this documentation.

[[self]]
=== Reload the Current Representation
Link Rel Value::
  +self+
Source::
  link:http://www.iana.org/assignments/link-relations/link-relations.xhtml[IANA]
Description::
  The +self+ link relation value identifies the link used to reload the current resource representation.
Method::
  +GET+
Query Parameters::
  None
Payload Parameters::
  None
Notes::
  None
Example Request::
  +GET / HTTP/1.1+
   
[[collection]]
=== Get a List of ToDo Records
Link Rel Value::
  +/files/hal-todo.html#collection+
Source::
  link:http://www.iana.org/assignments/link-relations/link-relations.xhtml[IANA]
Description::
  The +collection+ link relation value identifies the link used to load the complete list of ToDo records.
Method::
  +GET+
Query Parameters::
  None
Payload Parameters::
  None
Notes::
  None
Example Request::
  +GET / HTTP/1.1+

[[active]]
=== Get a List of Active ToDo Records
Link Rel Value::
  +/files/hal-todo.html#active+
Source::
  link:https://tools.ietf.org/html/rfc5988#section-4.2[RFC5988]
Description::
  The +active+ link relation value identifies the link used to load the list of `active' ToDo records (the ones with xref:data-completed[+completed+] set to "false").
Method::
  +GET+
Query Parameters::
  xref:data-completed[+completed+] MUST set to "false"
Payload Parameters::
  None
Notes::
  None
Example Request::
  +GET /?completed=false HTTP/1.1+

[[completed]]
=== Get a List of Completed ToDo Records
Link Rel Value::
  +/files/hal-todo.html#completed+
Source::
  link:https://tools.ietf.org/html/rfc5988#section-4.2[RFC5988]
Description::
  The +completed+ link relation value identifies the link used to load the list of `inactive' ToDo records (the ones with xref:data-completed[+completed+] set to "true").
Method::
  +GET+
Query Parameters::
  xref:data-completed[+completed+] MUST be set to "true"
Payload Parameters::
  None
Notes::
  None
Example Request::
  +GET /?completed=true HTTP/1.1+

[[create-form]]
=== Create a New ToDo Record
Link Rel Value::
  +/files/hal-todo.html#create-form+
Source::
  link:http://www.iana.org/assignments/link-relations/link-relations.xhtml[IANA]
Description::
  The +create-form+ link relation value identifies the link used to add a new ToDo record.
Method::
  +POST+
Query Parameters::
  None
Payload Parameters::
  xref:data-title[+title+] and xref:data-completed[+completed+]
Notes::
  If the xref:data-completed[+completed+] parameter is not passed, the server will set it to "false".
Example Request::
  +POST / HTTP/1.1+
  
  {"title":"this is a test", "completed":"false"}
  
[[todo]]
=== Retrieve an Existing ToDo Record
Link Rel Value::
  +/files/hal-todo.html#todo+
Source::
  link:https://tools.ietf.org/html/rfc5988#section-4.2[RFC5988]
Description::
  The +todo+ link relation value identifies the link used to retrieve an existing ToDo record.
Method::
  +GET+
Query Parameters::
  None
Payload Parameters::
  None
Notes::
  None
Example Request::
  +GET /123 HTTP/1.1+
  
[[edit]]
=== Edit an Existing ToDo Record
Link Rel Value::
  +/files/hal-todo.html#edit+
Source::
  link:http://www.iana.org/assignments/link-relations/link-relations.xhtml[IANA]
Description::
  The +edit+ link relation value identifies the link used to edit an existing ToDo record.
Method::
  +PUT+
Query Parameters::
  None
Payload Parameters::
  xref:data-title[+title+] and xref:data-completed[+completed+]
Notes::
  None
Example Request::
  +PUT /123 HTTP/1.1+
  
  {"title":"this is a new test", "completed":"false"}

[[remove]]
=== Remove an Existing ToDo Record
Link Rel Value::
  +/files/hal-todo.html#remove+
Source::
  link:http://www.iana.org/assignments/link-relations/link-relations.xhtml[IANA]
Source::
  link:https://tools.ietf.org/html/rfc5988#section-4.2[RFC5988]
Description::
  The +remove+ link relation value identifies the link used to remove an existing ToDo record.
Method::
  +DELETE+
Query Parameters::
  None
Payload Parameters::
  None
Notes::
  None
Example Request::
  +DELETE /123 HTTP/1.1+
  
== Data Elements
The following data elements are used in the ToDo Service. All server and client
applications should be ready to handle these data elements for display and processing.

[[data-title]]
title::
   The +title+ data element is a string representing the todo title.
[[data-id]]
id::
   The +id+ data element is a string representing the unique identifier for the todo.
[[data-completed]]
completed:: 
   The +completed+ data element is a string representing the compeletion status for the todo.
This value can be set to +"true"+ or +"false"+. 

== Media Types and Query Strings
Below is a list of payloads and query strings that can be sent from the client 
to the server along with a list of the common server responses.

[[hal-json]]
=== HAL Media Type : +application/vnd.hal+json+
The link:https://tools.ietf.org/html/draft-kelly-json-hal-06[HAL Media Type] (as
described in draft-kelly-json-hal-06) is used to send responses from the server to the client. 

Client applications SHOULD support and the MUST and SHOULD-level elements in the HAL media type specification.

[[plain-json]]
=== JSON Media Type : +application/json+
The link:https://tools.ietf.org/html/rfc7159[JSON Media Type] (as
described in RFC7159) is used to send updates from the client to the server. 
Essentially, this means clients build payloads using plain JSON objects with a set of name/value pairs.

For example, if the hypermedia control indicates an arguments named +title+ and +completed+ can be sent to the server, the client can format a payload that looks like the following:

.JSON Payload
----
{
  "title" : "this is a new task",
  "completed" : "false"
}
----

[[query-strings]]
=== URL Query Strings
The link:http://tools.ietf.org/html/rfc3986#section-3[URI Query] (as described in 
RFC3986, is used to send read-only queries from the client to the server. Essentially, 
this means clients build URL query strings using a name/value pair approach.

For example, if the hypermedia cxontrol indicates an argument named +title+ can be
sent to the server, the clienht can format a query URL that looks like the following:

.URL Query String
----
http://example.org/?title=this+is+a+test
----

